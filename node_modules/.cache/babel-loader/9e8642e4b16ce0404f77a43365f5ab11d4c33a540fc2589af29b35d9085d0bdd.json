{"ast":null,"code":"var _jsxFileName = \"/home/virtualaustin/repos/memory-game/src/components/GameBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport GameOver from './GameOver';\nimport Card from './Card';\nimport { data } from './data';\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = () => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [gameOver, endGame] = useState(false);\n  const [deck, updateDeck] = useState(data);\n  function shuffle(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n  function takeTurn(valid) {\n    if (!valid) {\n      endGame(true);\n      return;\n    }\n    let updatedScore = score + 1;\n    setScore(score => score + 1);\n    if (updatedScore > highScore) {\n      setHighScore(updatedScore);\n    }\n    updateDeck(shuffle(data));\n  }\n  function reset() {\n    endGame(false);\n    setScore(0);\n    updateDeck(shuffle(data));\n  }\n  useEffect(() => {\n    if (score) {\n      localStorage.setItem('score', score);\n    }\n    if (highScore) {\n      localStorage.setItem('highScore', highScore);\n    }\n  }, [score, highScore]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      score: score,\n      highScore: highScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), !gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck\",\n      children: deck.map(el => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          image: el.image,\n          text: el.text,\n          takeTurn: takeTurn\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(GameOver, {\n      score: score,\n      highScore: highScore,\n      reset: reset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(GameBoard, \"idanGYyzoj3R7pqwkVdIJ8YmQhc=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useEffect","useState","Header","GameOver","Card","data","jsxDEV","_jsxDEV","GameBoard","_s","score","setScore","highScore","setHighScore","gameOver","endGame","deck","updateDeck","shuffle","array","i","length","j","Math","floor","random","temp","takeTurn","valid","updatedScore","reset","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","el","image","text","id","_c","$RefreshReg$"],"sources":["/home/virtualaustin/repos/memory-game/src/components/GameBoard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport GameOver from './GameOver';\nimport Card from './Card';\nimport { data } from './data';\nimport '../style.css';\n\nconst GameBoard = (() => {\n    const [score, setScore] = useState(0);\n    const [highScore, setHighScore] = useState(0);\n    const [gameOver, endGame] = useState(false);\n    const [deck, updateDeck] = useState(data);\n\n    function shuffle(array){\n        for (let i = array.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          const temp = array[i];\n          array[i] = array[j];\n          array[j] = temp;\n        }\n        return array;\n    }\n\n    function takeTurn(valid){\n        if(!valid){\n            endGame(true);\n            return;\n        }\n        let updatedScore = score + 1;\n        setScore(score => score + 1);\n        if(updatedScore > highScore){\n            setHighScore(updatedScore);\n        }\n        updateDeck(shuffle(data));\n    }\n\n    function reset(){\n        endGame(false);\n        setScore(0);\n        updateDeck(shuffle(data));\n    }\n\n    useEffect(() => {\n        if(score){\n            localStorage.setItem('score', score);\n        }\n        if(highScore){\n            localStorage.setItem('highScore', highScore);\n        }\n    }, [score, highScore])\n\n    return (\n        <div className='game-board'>\n            <Header score={score} highScore={highScore} />\n            {\n            !gameOver ?\n                <div className='deck'>\n                    {deck.map(el => {\n                    return <Card image={el.image} text={el.text} takeTurn={takeTurn} key={el.id}/>\n                    })}\n                </div>\n            : \n                <GameOver score={score} highScore={highScore} reset={reset}\n            />}\n        </div>\n    );\n\n});\n\nexport default GameBoard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}