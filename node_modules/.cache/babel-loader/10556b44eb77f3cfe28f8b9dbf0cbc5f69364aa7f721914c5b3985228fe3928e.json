{"ast":null,"code":"var _jsxFileName = \"/home/virtualaustin/repos/memory-game/src/components/GameBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './Header';\nimport Deck from './Deck';\nimport GameOver from './GameOver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = () => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [gameOver, endGame] = useState(false);\n  function takeTurn() {\n    // Game over check\n\n    // Update score\n    setScore(score + 1);\n    if (score > highScore) {\n      setHighScore(score);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      score: score,\n      highScore: highScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), !gameOver ? /*#__PURE__*/_jsxDEV(Deck, {\n      takeTurn: takeTurn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(GameOver, {\n      score: score,\n      highScore: highScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 56\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(GameBoard, \"yjhqKo4A2tyM0Gc7Atn9Wloy3wg=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","Header","Deck","GameOver","jsxDEV","_jsxDEV","GameBoard","_s","score","setScore","highScore","setHighScore","gameOver","endGame","takeTurn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/virtualaustin/repos/memory-game/src/components/GameBoard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './Header';\nimport Deck from './Deck';\nimport GameOver from './GameOver';\n\nconst GameBoard = () => {\n    const [score, setScore] = useState(0);\n    const [highScore, setHighScore] = useState(0);\n    const [gameOver, endGame] = useState(false);\n\n    function takeTurn() {\n        // Game over check\n\n        // Update score\n        setScore(score+1);\n        if(score > highScore){\n            setHighScore(score);\n        }\n    }\n\n    return (\n        <div className='game-board'>\n            <Header score={score} highScore={highScore} />\n            {!gameOver ? <Deck takeTurn={takeTurn}/> : <GameOver score={score} highScore={highScore} />}\n        </div>\n    );\n\n}\n\nexport default GameBoard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACY,QAAQ,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3C,SAASc,QAAQA,CAAA,EAAG;IAChB;;IAEA;IACAL,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;IACjB,IAAGA,KAAK,GAAGE,SAAS,EAAC;MACjBC,YAAY,CAACH,KAAK,CAAC;IACvB;EACJ;EAEA,oBACIH,OAAA;IAAKU,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBX,OAAA,CAACJ,MAAM;MAACO,KAAK,EAAEA,KAAM;MAACE,SAAS,EAAEA;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7C,CAACR,QAAQ,gBAAGP,OAAA,CAACH,IAAI;MAACY,QAAQ,EAAEA;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,gBAAGf,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACE,SAAS,EAAEA;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1F,CAAC;AAGd,CAAC;AAAAb,EAAA,CAtBKD,SAAS;AAAAe,EAAA,GAATf,SAAS;AAwBf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}